# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

from arg_services.nlp.v1 import nlp_pb2 as arg__services_dot_nlp_dot_v1_dot_nlp__pb2


class NlpServiceStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.Vectors = channel.unary_unary(
                '/arg_services.nlp.v1.NlpService/Vectors',
                request_serializer=arg__services_dot_nlp_dot_v1_dot_nlp__pb2.VectorsRequest.SerializeToString,
                response_deserializer=arg__services_dot_nlp_dot_v1_dot_nlp__pb2.VectorsResponse.FromString,
                )
        self.Similarities = channel.unary_unary(
                '/arg_services.nlp.v1.NlpService/Similarities',
                request_serializer=arg__services_dot_nlp_dot_v1_dot_nlp__pb2.SimilaritiesRequest.SerializeToString,
                response_deserializer=arg__services_dot_nlp_dot_v1_dot_nlp__pb2.SimilaritiesResponse.FromString,
                )
        self.DocBin = channel.unary_unary(
                '/arg_services.nlp.v1.NlpService/DocBin',
                request_serializer=arg__services_dot_nlp_dot_v1_dot_nlp__pb2.DocBinRequest.SerializeToString,
                response_deserializer=arg__services_dot_nlp_dot_v1_dot_nlp__pb2.DocBinResponse.FromString,
                )


class NlpServiceServicer(object):
    """Missing associated documentation comment in .proto file."""

    def Vectors(self, request, context):
        """Compute embeddings (i.e., vectors) for strings.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Similarities(self, request, context):
        """Compute the similarity score between two strings.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def DocBin(self, request, context):
        """Process strings by spacy and return them as [binary data](https://spacy.io/api/docbin).
        Locally, spacy can restore this data **without** loading the underlying NLP models into the main memory.
        Allows one to retrieve all computed attributes (e.g., POS tags, sentences), but can only be used by Python programs.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_NlpServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'Vectors': grpc.unary_unary_rpc_method_handler(
                    servicer.Vectors,
                    request_deserializer=arg__services_dot_nlp_dot_v1_dot_nlp__pb2.VectorsRequest.FromString,
                    response_serializer=arg__services_dot_nlp_dot_v1_dot_nlp__pb2.VectorsResponse.SerializeToString,
            ),
            'Similarities': grpc.unary_unary_rpc_method_handler(
                    servicer.Similarities,
                    request_deserializer=arg__services_dot_nlp_dot_v1_dot_nlp__pb2.SimilaritiesRequest.FromString,
                    response_serializer=arg__services_dot_nlp_dot_v1_dot_nlp__pb2.SimilaritiesResponse.SerializeToString,
            ),
            'DocBin': grpc.unary_unary_rpc_method_handler(
                    servicer.DocBin,
                    request_deserializer=arg__services_dot_nlp_dot_v1_dot_nlp__pb2.DocBinRequest.FromString,
                    response_serializer=arg__services_dot_nlp_dot_v1_dot_nlp__pb2.DocBinResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'arg_services.nlp.v1.NlpService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class NlpService(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def Vectors(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/arg_services.nlp.v1.NlpService/Vectors',
            arg__services_dot_nlp_dot_v1_dot_nlp__pb2.VectorsRequest.SerializeToString,
            arg__services_dot_nlp_dot_v1_dot_nlp__pb2.VectorsResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def Similarities(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/arg_services.nlp.v1.NlpService/Similarities',
            arg__services_dot_nlp_dot_v1_dot_nlp__pb2.SimilaritiesRequest.SerializeToString,
            arg__services_dot_nlp_dot_v1_dot_nlp__pb2.SimilaritiesResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def DocBin(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/arg_services.nlp.v1.NlpService/DocBin',
            arg__services_dot_nlp_dot_v1_dot_nlp__pb2.DocBinRequest.SerializeToString,
            arg__services_dot_nlp_dot_v1_dot_nlp__pb2.DocBinResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
